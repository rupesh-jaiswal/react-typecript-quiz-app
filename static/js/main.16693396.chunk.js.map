{"version":3,"sources":["images/bkg-image.jpg","App.styles.ts","QrScannerModal.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","bgImg","Wrapper","styled","div","Qrscan","qrScanner","useState","setCamList","useEffect","videoElem","document","getElementById","QrScanner","result","console","log","start","then","camList","listCameras","cameras","forEach","camera","index","push","id","label","length","alert","JSON","stringify","stop","destroy","ReactDOM","render","StrictMode"],"mappings":"oLAAe,MAA0B,sCCI5BA,EAAcC,YAAH,sWAKQC,GAanBC,EAAUC,IAAOC,IAAV,miC,eCiDLC,EAxDA,WACX,IAAIC,EAA8B,KAClC,EAA8BC,mBAAgB,IAA9C,mBAAgBC,GAAhB,WAyCF,OAvCAC,qBAAU,WACR,IAAMC,EAAYC,SAASC,eAAe,kBA6B1C,OA5BGF,IAECJ,EAAY,IAAIO,IACZH,GACA,SAACI,GAAD,OAAiBC,QAAQC,IAAI,mBAAoBF,KACjD,KAGMG,QAAQC,MAAK,WACnB,IAAMC,EAA+E,GACrFN,IAAUO,aAAY,GAAMF,MAAK,SAAAG,GAAO,OAAIA,EAAQC,SAAQ,SAACC,EAAOC,GAChEL,EAAQM,KAAK,CACTC,GAAIH,EAAOG,GACXC,MAAOJ,EAAOI,QAGfH,IAAUH,EAAQO,OAAO,IACxBpB,EAAWW,GACXU,MAAMC,KAAKC,UAAUZ,cAU9B,WACAb,IACCA,EAAU0B,OACV1B,EAAU2B,cAIjB,IAGD,qCACI,cAAClC,EAAD,IACA,eAACG,EAAD,WACA,4CACA,uBAAOwB,GAAK,0BC1DpBQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzB,SAASC,eAAe,W","file":"static/js/main.16693396.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bkg-image.150fb259.jpg\";","import styled, { createGlobalStyle } from 'styled-components';\r\n//@ts-ignore\r\nimport bgImg from './images/bkg-image.jpg';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html{\r\n        height: 100%;\r\n    }\r\n    body {\r\n        background-image: url(${bgImg});\r\n        background-size: cover;\r\n        margin: 0;\r\n        padding: 0 20px;\r\n        display: flex;\r\n        justify-content: center;\r\n    }\r\n    * {\r\n        box-sizing: border-box;\r\n        font-family: 'Catamaran', sans-serif;\r\n    }\r\n `;\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    \r\n    >p {\r\n        color: #fff;\r\n    }\r\n\r\n    .score {\r\n        color: #fff;\r\n        font-size:2rem;\r\n        margin: 0;\r\n\r\n    }\r\n    h1 {\r\n        background: linear-gradient(180deg, #fff,#87f1ff);\r\n        background-size: 100%;\r\n        background-clip: text;\r\n        --webkit-background-clip: text;\r\n        --webkit-text-fill-color: trnasparent;\r\n        --moz-background-clip: text;\r\n        --moz-text-fill-color: transparent;\r\n        filter: drop-shadow(2px 2px #0085a3);\r\n        font-size: 70px;\r\n        font-weight: 400px;\r\n        text-align: center;\r\n        margin: 20px; \r\n    }\r\n    .start, .next {\r\n        cursor: pointer;\r\n        background: linear-gradient(180deg, #fff,#ffcc91);\r\n        border: 2px solid #d38558;\r\n        box-shadow: 0px 5px 10px rgb(0,0,0,0.25);\r\n        border-radius: 10px;\r\n        height: 40px;\r\n        margin: 20px;\r\n        padding: 0 40px;\r\n    }\r\n    .start {\r\n        max-width: 200px;\r\n    }\r\n`;","import React, { useEffect, useState } from 'react';\r\nimport { fetchQuestions, Difficulty, QuestionState} from './API';\r\n// Components\r\nimport QuestionCard from './components/QuestionCard';\r\nimport { GlobalStyle, Wrapper} from './App.styles';\r\nimport QrScanner from 'qr-scanner';\r\n\r\nexport type AnswerObject = {\r\n  question:string;\r\n  answer: string;\r\n  correct: boolean;\r\n  correctAnswer: string;\r\n}\r\n\r\nconst TOTAL_QUESTIONS = 2;\r\nconst Qrscan = () => {\r\n    let qrScanner: QrScanner | null = null;\r\n    const [camList, setCamList] = useState<any[]>([]);\r\n\r\n  useEffect(() => {\r\n    const videoElem = document.getElementById(\"qr-scan-window\");\r\n    if(videoElem) {\r\n        \r\n        qrScanner = new QrScanner(\r\n            videoElem as HTMLVideoElement,\r\n            (result: any) => console.log('decoded qr code:', result),\r\n            { /* your options or returnDetailedScanResult: true if you're not specifying any other options */ },\r\n        );\r\n        \r\n        qrScanner.start().then(() => {\r\n            const camList: ((prevState: never[]) => never[]) | { id: string; label: string; }[] =[];\r\n            QrScanner.listCameras(true).then(cameras => cameras.forEach((camera,index) => {\r\n                camList.push({\r\n                    id: camera.id,\r\n                    label: camera.label,\r\n                });\r\n\r\n                if(index === cameras.length-1) {\r\n                    setCamList(camList);\r\n                    alert(JSON.stringify(camList));\r\n\r\n                }\r\n\r\n                \r\n            }));\r\n        });\r\n    }\r\n\r\n\r\n    return () => {\r\n        if(qrScanner) {\r\n            qrScanner.stop();\r\n            qrScanner.destroy();\r\n        }\r\n        \r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n        <GlobalStyle/>\r\n        <Wrapper>\r\n        <h1> QrScanner</h1>\r\n        <video id = \"qr-scan-window\"></video>\r\n\r\n        \r\n        </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Qrscan;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Qrscan from './QrScannerModal';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Qrscan />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}